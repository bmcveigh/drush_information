<?php

/**
 * @file
 * Show custom drush commands that are part of a module.
 *
 * Displays the following data for each Drush command:
 *   - Command
 *   - Aliases
 *   - Callback
 *   - Description
 *   - Arguments
 *   - Options.
 */

if (!function_exists('dt')) {

  /**
   * Drush function.
   */
  function dt($string, $args = array()) {
    $output = NULL;
    $args['@string'] = $string;
    if (function_exists('t') && drush_drupal_major_version() == 7) {
      $output = t('@string', $args);
    }
    // The language system requires a working container which has the string
    // translation service.
    elseif (drush_drupal_major_version() >= 8 && \Drupal::hasService('string_translation')) {
      $output = \Drupal::translation()->translate($string, $args);
    }
    elseif (function_exists('t') && drush_drupal_major_version() <= 7 && function_exists('theme')) {
      $output = t('@string', $args);
    }

    // If Drupal's t() function unavailable.
    if (!isset($output)) {
      if (!empty($args)) {
        $output = strtr($string, $args);
      }
      else {
        $output = $string;
      }
    }
    return $output;
  }

}

if (!function_exists('drush_drupal_major_version')) {

  /**
   * Drush function.
   */
  function drush_drupal_major_version($drupal_root = NULL) {
    $major_version = FALSE;
    if ($version = drush_drupal_version($drupal_root)) {
      $version_parts = explode('.', $version);
      if (is_numeric($version_parts[0])) {
        $major_version = (integer) $version_parts[0];
      }
    }
    return $major_version;
  }

}

if (!function_exists('drush_drupal_version')) {

  /**
   * Drush function.
   */
  function drush_drupal_version($drupal_root = NULL) {
    static $version = FALSE;

    if (!$version) {
      if (($drupal_root != NULL) || ($drupal_root = drush_get_context('DRUSH_DRUPAL_ROOT'))) {
        // D7 stores VERSION in bootstrap.inc. D8 moved that to /core/includes.
        $version_constant_paths = array(
          '/modules/system/system.module',
          '/includes/bootstrap.inc',
          '/core/includes/bootstrap.inc',
        );
        foreach ($version_constant_paths as $path) {
          if (file_exists($drupal_root . $path)) {
            require_once $drupal_root . $path;
          }
        }
        // We just might be dealing with an early Drupal version (pre 4.7)
        if (defined('VERSION')) {
          $version = VERSION;
        }
      }
    }
    return $version;
  }

}

if (!function_exists('drush_get_context')) {

  /**
   * Drush function.
   */
  function &drush_get_context($context = NULL, $default = NULL) {
    static $cache = array();
    if (!is_null($context)) {
      if (!isset($cache[$context])) {
        $default = is_null($default) ? array() : $default;
        $cache[$context] = $default;
      }
      return $cache[$context];
    }
    return $cache;
  }

}
